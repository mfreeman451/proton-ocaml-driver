name: Build and Test

on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ocaml-version: [ 4.14, 5.3 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-version }}
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install dependencies (with tests)
        run: opam install . --deps-only --with-test

      - name: Build
        run: opam exec -- dune build

      - name: Test
        run: opam exec -- dune runtest

  lower-bounds-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install dependencies (lower bounds criteria)
        run: opam install . --deps-only --with-test --criteria='+removed,+count[version-lag,solution]' --solver=builtin-0install

      - name: Build (lower bounds)
        run: opam exec -- dune build

      - name: Test (lower bounds)
        run: opam exec -- dune runtest

  test-main:
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            ocaml: 4.14
          - os: ubuntu-latest
            ocaml: 5.3
          - os: macos-latest
            ocaml: 5.3
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml ${{ matrix.ocaml }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml }}
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install dependencies (with tests)
        run: opam install . --deps-only --with-test

      - name: Build
        run: opam exec -- dune build

      - name: Test
        run: opam exec -- dune runtest

      - name: Install lower bounds
        run: opam install . --deps-only --with-test --criteria='+removed,+count[version-lag,solution]' --solver=builtin-0install

      - name: Build (lower bounds)
        run: opam exec -- dune build

      - name: Test (lower bounds)
        run: opam exec -- dune runtest
