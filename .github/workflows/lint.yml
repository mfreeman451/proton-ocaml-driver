name: Lint

on:
  push:
    branches: [ main, master ]
  pull_request:

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install ocamlformat
        run: opam install ocamlformat

      - name: Lint fmt
        uses: ocaml/setup-ocaml/lint-fmt@v3

  # auto fix formatting, Thanks to robur.coop for the implementation
  # https://discuss.ocaml.org/t/ocamlformat-and-github-actions/15464
  lint-auto-fmt:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install ocamlformat
        run: opam install ocamlformat

      - name: Format code
        run: |
          eval $(opam env)
          git ls-files '*.ml' '*.mli' | xargs ocamlformat --inplace

      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: ${{ steps.git-check.outputs.modified == 'true' }}
        run: |
          git config --global user.name "Automated ocamlformat GitHub action, developed by robur.coop"
          git config --global user.email "autoformat@robur.coop"
          git add -A
          git commit -m "formatted code"
          git push

  lint-opam:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Lint opam
        uses: ocaml/setup-ocaml/lint-opam@v3
        continue-on-error: true

  lint-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Lint doc
        uses: ocaml/setup-ocaml/lint-doc@v3

  lint-opam-autofix:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use OCaml 5.3
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3
          dune-cache: true
          allow-prerelease-opam: true

      - name: Install opam-dune-lint
        run: opam install opam-dune-lint -y

      - name: Run opam-dune-lint (update opam files)
        run: opam exec -- opam-dune-lint

      - name: Commit and push opam file updates
        run: |
          if git diff --quiet -- proton.opam; then
            echo "No opam changes";
          else
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git add proton.opam
            git commit -m "chore(opam): sync proton.opam with dune describe"
            git push
          fi
